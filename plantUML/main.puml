@startuml
skinparam monochrome true
skinparam classAttributeIconSize 0

participant "main" as main
participant "config" as config
participant "zapLogger" as logger
participant "postgres" as postgres
participant "tachibana" as tachibana
participant "order" as orderRepo
participant "account" as accountRepo
participant "usecase" as tradingUsecase
participant "eventStream" as eventStream
participant "auto_algorithm" as autoTradingAlgorithm
participant "auto_usecase" as autoTradingUsecase
participant "handler" as tradingHandler
participant "http.Server" as httpServer

activate main

main -> config : LoadConfig
activate config
config --> main : Config
deactivate config

main -> logger : NewZapLogger
activate logger
logger --> main : Logger
deactivate logger

main -> postgres : NewPostgresDB
activate postgres
postgres --> main : PostgresDB
deactivate postgres

main -> tachibana : NewTachibanaClient
activate tachibana
tachibana --> main : TachibanaClient
deactivate tachibana

main -> tachibana : Login
activate tachibana
tachibana --> main : Login result
deactivate tachibana

main -> tachibana : DownloadMasterData
activate tachibana
tachibana --> main : Master data
deactivate tachibana

main -> orderRepo : NewOrderRepository
activate orderRepo
orderRepo --> main : OrderRepository
deactivate orderRepo

main -> accountRepo : NewAccountRepository
activate accountRepo
accountRepo --> main : AccountRepository
deactivate accountRepo

main -> tradingUsecase : NewTradingUsecase
activate tradingUsecase
tradingUsecase --> main : TradingUsecase
deactivate tradingUsecase

main -> eventStream : NewEventStream
activate eventStream
eventStream --> main : EventStream
deactivate eventStream

create autoTradingAlgorithm
main -> autoTradingAlgorithm : new

main -> autoTradingUsecase : NewAutoTradingUsecase
activate autoTradingUsecase
autoTradingUsecase --> main : AutoTradingUsecase
deactivate autoTradingUsecase

main -> tradingHandler : NewTradingHandler
activate tradingHandler
tradingHandler --> main : TradingHandler
deactivate tradingHandler

main -> eventStream : Start (goroutine)
activate eventStream
main -> autoTradingUsecase : Start (goroutine)
activate autoTradingUsecase

main -> httpServer : Start HTTP Server (goroutine)
activate httpServer

' Shutdown sequence
main ->> main : Wait for signal or error
main -> eventStream : Stop
activate eventStream
eventStream --> main
deactivate eventStream
main -> httpServer : Shutdown
activate httpServer
httpServer --> main
deactivate httpServer
main -> postgres : Close
activate postgres
postgres --> main
deactivate postgres

deactivate main
@enduml